<project name="kmlutils" default="dist" xmlns:ivy="antlib:org.apache.ivy.ant">

	<!--
	for debugging:
	ant -verbose 
	http://ant.apache.org/problems.html
	-->
	
	<property file="build.properties"/>
	<property file="ivysettings.properties"/>
	
	<path id="compile">
		<pathelement location="lib/commons-logging-1.2.jar"/>
		<!--<pathelement location="lib/log4j-1.2.15.jar"/>-->
	</path>

	<path id="default">
		<path refid="compile"/>
		<pathelement path="bin/"/>
		<pathelement path="src/"/> <!-- log4j -->
	</path>
	
	<target name="clean" description="cleans build artifacts">
		<delete dir="lib"/>
		<delete dir="bin"/>
		<delete dir="dist"/>
	</target>

	<target name="prepare">
		<mkdir dir="bin" />
		<mkdir dir="dist"/>
		<mkdir dir="work/output" />
	</target>

	<target name="compile" depends="prepare">
		<javac srcdir="src" destdir="bin" classpathref="default" debug="on" source="1.7" target="1.7"/>
		<copy todir="bin" >
			<fileset dir="src">
				<include name="**/*.properties"/>
				<exclude name="log4j.properties"/>
			</fileset>
		</copy>
	</target>

	<target name="jar" depends="compile" description="builds jar">
		<jar destfile="dist/jars/kmlutils.jar" basedir="bin">
			<manifest>
				<attribute name="Implementation-Title" value="${ant.project.name}"/>
				<attribute name="Implementation-Version" value="${version}"/>
			</manifest>
		</jar>
	</target>
	
	<target name="jar-source" depends="prepare" description="builds sources jar">
		<jar destfile="dist/sources/kmlutils.jar"
			basedir="src">
			<include name="**"/>
		</jar>
	</target>

	<target name="javadoc" depends="prepare" description="builds javadoc">
		<!--echo message="java.home: ${java.home}" /-->
		<javadoc destdir="dist/javadoc" sourcepath="src" classpathref="default"/>
		<jar destfile="dist/javadocs/kmlutils.jar" basedir="dist/javadoc" includes="**"/>
	</target>

	<target name="dist" depends="jar, jar-source, javadoc, make-ivy-pom">
		<copy tofile="dist/jars/svg2kml.jar" file="dist/jars/kmlutils.jar"/>
		<!--copy tofile="dist/jars/kmlutils-${version}.jar" file="dist/jars/kmlutils.jar"/-->
	</target>
	
	<target name="run-svg2kml">
		<java classpathref="default" classname="tbrugz.geo.SVG2KML" />
	</target>

	<target name="run-svg2graphml">
		<java classpathref="default" classname="tbrugz.geo.SVG2GraphML" />
	</target>
	
	<target name="run-all" depends="run-svg2kml, run-svg2graphml">
	</target>

	<target name="kml-validate" depends="prepare">
		<!--
		http://ant.apache.org/manual/Tasks/xmlvalidate.html
		http://ant.apache.org/manual/Tasks/schemavalidate.html
		
		http://googlemapsapi.blogspot.com/2007/06/validate-your-kml-online-or-offline.html
		http://www.kmlvalidator.com/
		-->
		<!-- for DTDs
		<xmlvalidate failonerror="yes" lenient="no" warn="yes">
			<fileset dir="work/output" includes="**/*.kml"/>
			<attribute name="http://xml.org/sax/features/validation" value="true"/>
		</xmlvalidate>
		-->
		<!--schemavalidate noNamespaceFile="xsd/kml21.xsd">
			<fileset dir="work/output" includes="**/*.kml"/>
		</schemavalidate-->
		<schemavalidate failonerror="false">
			<schema namespace="http://earth.google.com/kml/2.0" file="xsd/kml20.xsd" />
			<schema namespace="http://earth.google.com/kml/2.1" file="xsd/kml21.xsd" />
			<schema namespace="http://www.opengis.net/kml/2.2" file="xsd/ogckml22.xsd" />
			
			<!-- needed for kml 2.2 -->
			<schema namespace="http://www.w3.org/2005/Atom" file="xsd/atom-author-link.xsd" />
			<schema namespace="urn:oasis:names:tc:ciq:xsdschema:xAL:2.0" file="xsd/xAL.xsd" />
			
			<fileset dir="work/output" includes="**/*.kml" />
		</schemavalidate>
	</target>

	<target name="config-ivy-file" if="ivy.settings.file">
		<echo message="setting ivy file: ${ivy.settings.file}"/>
		<ivy:settings file="${ivy.settings.file}"/>
	</target>
	
	<target name="config-ivy-dir" if="ivy.settings.dir" unless="ivy.settings.file">
		<echo message="setting ivy file (by dir): ${ivy.settings.dir}/ivysettings.xml"/>
		<ivy:settings file="${ivy.settings.dir}/ivysettings.xml"/>
	</target>

	<target name="config-ivy" depends="config-ivy-file,config-ivy-dir"/>
	
	<target name="resolve" depends="config-ivy" description="retrieve dependencies with ivy">
		<ivy:retrieve />
	</target>

	<target name="make-ivy-pom" depends="config-ivy">
		<ivy:info/>
		<property name="revision" value="${version}"/>
		<property name="ivy.pom.version" value="${revision}"/>
		<ivy:deliver conf="*(public)" deliverpattern="dist/[type]s/${ivy.module}.ivy.xml" status="release" validate="true" pubrevision="${revision}"/>
		<ivy:makepom ivyfile="ivy.xml" pomfile="dist/poms/${ivy.module}.pom" templatefile="pom-template.xml">
			<mapping conf="default" scope="compile"/>
		</ivy:makepom>
	</target>
	
	<!-- see http://theholyjava.wordpress.com/2011/01/26/using-ivy-with-pom-xml/ -->
	<target name="publish" depends="dist" description="publish this project in the ivy repository">
		<property name="resolver.publish" value="local"/>
		<!--property name="revision" value="${version}"/>
		<ivy:info file="ivy.xml" validate="true"/>
		<property name="ivy.pom.version" value="${revision}"/-->
		<echo message="ivy.settings.dir: ${ivy.settings.dir} ; ivy.settings.file: ${ivy.settings.file} ; ivy.module: ${ivy.module}"/>
		<echo message="mvn.repository.dir = ${mvn.repository.dir}"/>
		<ivy:publish resolver="${resolver.publish}" pubrevision="${revision}" status="release" update="true" overwrite="true"
			artifactsPattern="dist/[type]s/[artifact].[ext]">
			<artifact name="${ivy.module}" ext="pom" type="pom" />
			<artifact name="${ivy.module}" ext="jar" type="source" classifier="sources"/>
			<artifact name="${ivy.module}" ext="ivy.xml" type="ivy" />
		</ivy:publish>
		<echo message="project ${ant.project.name} released with version ${revision} to ${resolver.publish}"/>
	</target>

	<target name="publish-sonatype-snapshot" depends="dist">
		<ant antfile="build-sonatype.xml" target="deploy"/> <!-- deploy snapshots -->
	</target>
	
	<target name="publish-sonatype-release" depends="dist">
		<ant antfile="build-sonatype.xml" target="stage"/> <!-- deploy (signed) releases -->
	</target>
	
	<target name="all" depends="clean,resolve,publish" description="clean, resolve, build and publish project"/>
	
</project>
